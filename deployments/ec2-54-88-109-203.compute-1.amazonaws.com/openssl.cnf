# OpenSSL root CA configuration file.
# Copy to `/root/ca/openssl.cnf`.

[req]
# Options for the `req` tool (`man req`).
default_bits        = 2048
default_md          = sha256
string_mask         = utf8only
distinguished_name  = req_distinguished_name
utf8                = yes
prompt              = no
encrypt_key         = no
#req_extensions      = server_cert
#x509_extensions     = server_cert

[req_distinguished_name]
countryName                     = US
stateOrProvinceName             = CA
localityName                    = South San Francisco
organizationName                = Thermo Fisher Scientific, Inc.
organizationalUnitName          = Clinical Sequencing Division
# commonName                      = ec2-54-88-109-203.compute-1.amazonaws.com
commonName                      = app1.uat.ionreporter.thermofisher.com

[prompt_distinguished_name]
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = Locality Name
organizationName                = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address
countryName_default             = US
stateOrProvinceName_default     = California
localityName_default            =
organizationName_default        = Upstart
organizationalUnitName_default  = Data Engineering
emailAddress_default            =

[server_cert]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
# authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment

[usr_cert]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection
extendedKeyUsage = serverAuth

[v3_intermediate_ca]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[v3_ca]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[crl_ext]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier=keyid:always

[ocsp]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning
